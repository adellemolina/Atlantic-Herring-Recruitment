---
title: "Boosted Regression Trees: Preliminary Results"
author: "Adelle Molina"
format:
  pdf:
    documentclass: report
editor: visual
---

# Boosted Regression Trees for herring recruitment

Code for getting data, generating time series of possible predictors, plotting recruitment and predictor time series, producing correlation matrices to reduce the possible predictor list, and running boosted regression trees (preliminary results).

```{r}
#| label: load-packages
#| include: false
#| echo: false

library(dplyr)
library(ggplot2)
library(corrplot)
library(reshape2)
library(ggstatsplot)
library(gbm)
library(tidyr)
library(dismo)
library(gridExtra)
library(ggcorrplot)
library(ggpubr)
```

## Load data

The data loaded in below was modified, summarized, compiled and exported in a separate script

-   OISST
-   Bottom Temperature: high resolution daily composite product from four ocean models (as in du Pontavice et al. 2023)
-   Environmental indices
    1.  Heatwave index
    2.  Cold Pool index
    3.  Gulf Stream Index
    4.  Warm Slope Water proportion
-   Food
    -   Abundance of calanus finmarchicus stage C5 in the GoM in fall
    -   Total zooplankton abundance (cnidaria, euphausids, small calanoid, large calanoid)
        -   small calanoids included separately as are cnidarians
-   Predators
    -   Haddock index is the retrospective adjusted SSB from the GoM Haddock 2019 assessment (need to update with 2022 numbers)
    -   Mackerel SSB is from the 2021 assessment
-   Biological indices
    -   Chlorophyll a
    -   Primary production
-   Herring recruitment indices from 2022 assessment

```{r}
#| label: Load data
#| include: true
#| echo: false

# Load in the combined data 
dat <- read.csv(file='Data/Combined.Data.csv', header=T)
```

## Preliminary plots

Plot time series of possible variables and correlation matrices

```{r}
#| label: Fig Recruit 
#| include: true
#| echo: false

herr.rec <- dat%>% 
  dplyr::select(year, recruits, R.no.devs, logR.dev, SR.std.resid, SSB, SPR,  Rs)
herr.rec <- reshape2::melt(ts.recr, id.vars="year", variable.name="series")

ggplot(herr.rec, aes(year,value)) +
  geom_line()+ 
  theme_bw()+
  facet_wrap(~ series, scales = "free")

ggstatsplot::ggcorrmat(
  data = herr.rec,
  type = "nonparametric", 
  colors = c("darkred", "white", "steelblue"))
```

### Trends in recruitment variables:

| **Recruits:** Steady decline since the 90s, strong year classes every 2-3 years, but none since 2012
| **Recruitment no deviations:** start high, fast drop, increase then stable, large recent decline
| **Log Recruitment Deviations:** High interannual variability, but was hovering around zero and then declining since the 90s. Deviations from stock recruit function are more negative in current decade, but has increased in the last 5 years
| **Stock Recruit Standardized Residuals**: Same as log deviations
| **SSB**: Very high biomass in 70s before rapid decline, from lows in 80s, very slow increase until late 90s, then steady decline since 2000
| **Spawning potential ratio**: Was high in the 70s-early 80s, declined sharply from 1980-2000 and has since been low. This means that fishing is affecting the lifetime reproductive potential of an "average" individual
| **log Recruitment success (Recruits(t)/SSB(t-1):** increased throughout the 80s and 90s, declined in 1990 to intermediate levels in the 2000s, and, then declined sharply after 2010 to 2015 and has since risen back to relatively high levels

```{r}
#| label: Code Env Vars Figs
#| include: true
#| echo: false

basin.env <- basin.vars%>% 
  dplyr::select(year, WSW, CP, GSI, HW, SpBT, SpSST, FaBT, FaSST, BS, BT, SSS, SST, OISST) 
basin.melt <- melt(basin.env, id.vars="year", variable.name="series")

ts.env.vars <- ggplot(basin.melt, aes(year,value)) +
  geom_line()+ 
  theme_bw()+
  facet_wrap(~ series, scales = "free", ncol=4)
cor.env <-ggstatsplot::ggcorrmat(
  data = basin.env,
  type = "nonparametric", 
  colors = c("darkred", "white", "steelblue"))

bio.dat <- basin.vars%>% 
  dplyr::select(year,ChlA, PPD, HadSSB_GoM, MackSSB, CalAD, CalC5, CalC4, CalC3, Cal.AnAbun, Smcope.Falldens, Smcope.Springdens, Smcope.AnDens, Sm.cal.abun, Lg.cal.abun, ZooAbun)
bio.melt <- melt(bio.dat, id.vars="year", variable.name="series")
ts.bio.vars <- ggplot(bio.melt, aes(year,value)) +
  geom_line()+ 
  theme_bw()+
  facet_wrap(~ series, scales = "free", ncol=4)
cor.bio <-ggstatsplot::ggcorrmat(
  data = bio.dat,
  type = "nonparametric",
  colors = c("darkred", "white", "steelblue"))
```

```{r}
#| label: Fig TS Basin Wide Environmental Variables
#| include: true
#| echo: false
#| fig-width: 7
#| fig-height: 9
ts.env.vars
```

```{r}
#| label:  Fig Corr Matrix Environmental Vars 
#| include: true
#| echo: false
#| fig-width: 7
#| fig-height: 9
cor.env
```

```{r}
#| label: Fig TS Basin Wide Biological Vars
#| include: true
#| echo: false
#| fig-width: 7
#| fig-height: 9
ts.bio.vars
```

```{r}
#| label: Fig Corr Matrix Biological Vars
#| include: true
#| echo: false
#| fig-width: 7
#| fig-height: 9
cor.bio
```

### Patterns and correlations in environmental variables:

-   OISST in each region is similar to the basin scale annual OISST; these were all highly correlated (drop regionals)
-   OISST and survey derived SST have different patterns; not significantly correlated (keep both)
-   Bottom temp and SST patterns are different, but they are correlated (keep both)
-   Bottom and surface salinity are significantly correlated and patterns are broadly similar (just keep bottom)
-   Seasonal (fall and spring) SST and BT patterns are different and correlated to various of the other temperature metrics, including the regionals
-   Distinct regional patterns in SST and BT that also differ from the basin wide annual averages
    -   Although annual SST is correlated to the regional values, because MAB area is largest and it's a weighted average, this correlation is strongest (keep regionals)

    -   Bottom temperature is not significantly correlated to all the regional bottom temps (keep regionals)

### Patterns and correlations in environmental indices:

-   **HW**: Lots of missing data in heatwave index, generally low in 80s-2000s, sharp increase around 2010 and high but varying intensity in last ten years (significantly correlated with other indices)
    -   Regional patterns broadly similar to each other and to annual (all significantly correlated)
    -   SPR significantly correlated to HW (& GB heatwave)
-   **GSI:** Periodic variation from 80s-2000s, increase since 2010
-   **Cold Pool:** highly variable, more positive years since 2010

### Patterns and correlations in biological indices:

-   **Primary Production**: short ts, increasing from 2000-2010, slight decline since then
    -   Regional patterns look different from each other and annual (annual sig corr with GOM and GB; just keep annual)
-   **Zooplankton Abundance:** Regional patterns diffrent from eacother and annual, esp MAB, all characterized by episodic spikes (only sig corr with GOM)
-   **Zooplankton Density:** Missing several years, different patterns from abundance, was high in early 2000s, rapid decline to low levels through late 2000s, steady increase since 2010
-   **Copepod Abundance:** Different patterns as total zooplankton abundance
    -   Stage 5 patterns similar to the total pattern (CAD diff from CC5 and Cope, but CC5 and Cope very similar; significantly correlated)

    -   Regional patterns differ (scotian shelf data missing many years), but GOM looks most similar to the total copepod abundance (GOM sig corr to total copepod abundance)
-   **GB zooplankton abundance was significantly correlated to recruitment success**
    -   Keep regional calanus abundance and regional zooplankton abundances but drop density and abundance
-   **Haddock SSB**
    -   Was low for most of the time series and increased rapidly around 2010

## Add lags

Prepare data for BRTs --\> add lags to the variables and then join back with the herring data

```{r}
#| label: Add-lags
#| include: true
#| echo: false

# remove highly correlated variables 
ts.vars <- vars%>% 
  dplyr::select(-ZooDens,-OISST.GB,-OISST.GOM,-OISST.MAB,-OISST.SS,-SSS, -CalAD, -CalC5, -Cal.SS, -CP, -GSI, -HW.GB, -HW.GOM, -HW.MAB, -PP.GB, -PP.GOM, -PP.MAB,-PP.GOM, -ZooAbun)

# Create a separate object for each lag, shift, append lag to column name
lag1 <-ts.vars 
lag1$year <- lag1$year+1
colnames(lag1)[2:ncol(lag1)]<-paste(colnames(ts.vars)[2:ncol(ts.vars)],"_1",sep="")
lag1<-as.data.frame(lag1)
lag1<-lag1%>%
  add_row(year=1982, .before=1)%>%
  dplyr::filter((year<2019)%>% replace_na(TRUE)) # add na to earlier years and chop off extra years
lag1<-lag1[,-c(1)] # remove extra year column

lag2 <-ts.vars 
lag2$year <- lag2$year+2
colnames(lag2)[2:ncol(lag2)]<-paste(colnames(ts.vars)[2:ncol(ts.vars)],"_2",sep="")
lag2<-as.data.frame(lag2)
lag2<-lag2%>%
  add_row(year=1982, .before=1)%>%
  add_row(year=1983, .after=1)%>%
  dplyr::filter((year<2019)%>% replace_na(TRUE)) 
lag2<-lag2[,-c(1)] 

lag3 <-ts.vars 
lag3$year <- lag3$year+3
colnames(lag3)[2:ncol(lag3)]<-paste(colnames(ts.vars)[2:ncol(ts.vars)],"_3",sep="")
lag3<-as.data.frame(lag3)
lag3<-lag3%>%
  add_row(year=1982, .before=1)%>%
  add_row(year=1983, .after=1)%>%
  add_row(year=1984, .after=2)%>%
  dplyr::filter((year<2019)%>% replace_na(TRUE)) 
lag3<-lag3[,-c(1)] 

# Combine 
herr <- ts.recr%>% 
  dplyr::select(year, SPR, logR.dev, Rs, SSB)%>%
  dplyr::filter(year%in%c(seq(1982,2018)))
dat2 <- merge(herr, ts.vars,by = "year")
lagdat <- cbind(dat2,lag1,lag2, lag3)
brtdat <- data.frame(lagdat)
head(brtdat)
```

### Run Boosted Regression Trees

```{r}
#| label: Boosted Regression Trees
#| output: false
#| cache: false

# Run boosted trees for RS (recruitment success aka R(t)/SSB(t0))
ncol(brtdat) # how many columns
which(colnames(brtdat)=="Rs") # which column is Rs, the dependent variable
Rs.mod <-gbm.step(data=brtdat,
                   gbm.x=c(1, 5, 6:105), # Select variables, incl ssb & year
                   gbm.y=4, # Rs
                   family="gaussian", tree.complexity=1, # (1 = no interactions)
                   learning.rate=0.01, bag.fraction=0.7)

null.dev<-Rs.mod$self.statistics$mean.null
resid.dev<-Rs.mod$cv.statistics$deviance.mean
dev.expl<-((null.dev-resid.dev)/null.dev)*100
dev.expl 

# Plot relative influence
Rs.rel <-summary(Rs.mod)
ggplot(data=Rs.rel,aes(x=reorder(var,rel.inf),y=rel.inf))+
  geom_bar(stat="identity")+
  labs(x="",y="relative influence")+
  coord_flip()
# still lots of unimportant variables, zoo and copepods in GB had an extremely high relative influence and haddock ssb was up there too

# Repeat w slightly smaller dataset (remove variables with 0 or near 0 influence)
brtdat.sm <- brtdat%>% 
  dplyr::select(-OISST, -OISST_1,-OISST_2, -OISST_3, -SST, -SST_1,-SST_2, -SST_3, -PP, -PP_1, -PP_2, -PP_3, -FaBT, -FaBT_1, -FaBT_2, -FaBT_3, -SST.MAB,-SST.MAB_1, -SST.MAB_2,-SST.MAB_3, -SST.SS, -SST.SS_1, -SST.SS_2, -SST.SS_3, -BT, -BT_1, -BT_2, -BT_3)
ncol(brtdat.sm) # how many columns
Rs.mod1 <-gbm.step(data=brtdat.sm,
                   gbm.x=c(1, 5, 6:77), 
                   gbm.y=4, # Rs
                   family="gaussian", tree.complexity=1, # (1 = no interactions)
                   learning.rate=0.01, bag.fraction=0.7)

null.dev<-Rs.mod1$self.statistics$mean.null
resid.dev<-Rs.mod1$cv.statistics$deviance.mean
dev.expl1<-((null.dev-resid.dev)/null.dev)*100
dev.expl1

Rs.rel1 <-summary(Rs.mod1)
relinf.fig <- ggplot(data=Rs.rel1,aes(x=reorder(var,rel.inf),y=rel.inf))+
  geom_bar(stat="identity")+
  labs(x="",y="relative influence")+
  coord_flip()
# same pattern as model above

# Can probably remove even more 0 influence sets (cal abun) and in other cases can remove lags (BS1-3, SSTGOM1-3) maybe FaSST & BT.SS
brtdat.sm2 <- brtdat.sm%>% 
  dplyr::select(-CalAbun, -CalAbun_1,-CalAbun_2, -CalAbun_3, -BS_1,-BS_2, -BS_3, -SST.GOM_1, -SST.GOM_2, -SST.GOM_3)

ncol(brtdat.sm2) # how many columns
Rs.mod2 <-gbm.step(data=brtdat.sm2,
                   gbm.x=c(1, 5, 6:67), 
                   gbm.y=4, # Rs
                   family="gaussian", tree.complexity=1, # (1 = no interactions)
                   learning.rate=0.01, bag.fraction=0.7)

null.dev<-Rs.mod2$self.statistics$mean.null
resid.dev<-Rs.mod2$cv.statistics$deviance.mean
dev.expl2<-((null.dev-resid.dev)/null.dev)*100
dev.expl2 # Dev expl decreased, perhaps removed too many 

Rs.rel2 <-summary(Rs.mod2)
ggplot(data=Rs.rel2,aes(x=reorder(var,rel.inf),y=rel.inf))+
  geom_bar(stat="identity")+
  labs(x="",y="relative influence")+
  coord_flip()

```

-   The two most important variables are related to food in GB followed by haddock ssb and some temperature metrics as seen in this figure of the relative influence in the model with highest deviance explained

-   The deviance explained for the model shown below was `r dev.expl1`%

```{r}
#| label: Fig Relative Influence Plot
#| include: true
#| echo: false
#| fig-width: 8
#| fig-height: 8
relinf.fig
```

-   this was followed by SST in GOM and spring SST three years before

-   Not shown here are models for log recruit deviations (lower deviance explained but similar relative influence plots) and for spawner/recruit (also lower deviance, but different relative influence, no GB food near the top)

-   Several variables were not important at all, although a few more can still be removed

### Plot partial dependence

```{r}
#| label: Code Partial Dependence Plots
#| include: false
#| echo: false

# plot the top 6 variables

x<-c()
for(i in 1:(ncol(brtdat.sm) -3)){
  pdp<-plot.gbm(Rs.mod1,i,return.grid=T)
  pdp$var<-rep(colnames(pdp)[1],nrow(pdp))
  pdp$ri<-rep(Rs.rel1$rel.inf[which(row.names(Rs.rel1)==colnames(pdp)[1])],nrow(pdp))
  colnames(pdp)<-c("val","Rs","var","ri")
  x<-rbind(x,pdp)
}

# order by relative influence
x$var<-factor(x$var,levels=row.names(Rs.rel1))

# top 6
top6<-as.character(Rs.rel1$var[1:6])
relinf<-round(Rs.rel1$rel.inf[1:6],1)

x%>%
  filter(var==top6[1])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[1],"(",relinf[1],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p1

x%>%
  filter(var==top6[2])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[2],"(",relinf[2],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p2

x%>%
  filter(var==top6[3])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[3],"(",relinf[3],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p3

x%>%
  filter(var==top6[4])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[4],"(",relinf[4],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p4

x%>%
  filter(var==top6[5])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[5],"(",relinf[5],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p5

x%>%
  filter(var==top6[6])%>%
  ggplot(aes(x=val,y=Rs))+
  geom_smooth(method="loess",se=T,color="darkgray")+
  labs(x=paste(top6[6],"(",relinf[6],"%)",sep=""),y="Marginal effect on Rs")+
  theme(panel.grid.minor=element_blank(),axis.text=element_text(size=12))->p6

pdpz <- grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)

```

```{r}
#| label: Fig Partial Dependence Plot
#| include: true
#| echo: false
plot(pdpz)
```

Problematically, the partial dependence of the top two variables, which represent food abundance, are counter to expectations. Lower calanus and total zooplankton abundance was related to higher Rs. Not sure how to handle that because 80% seems really high for one variable.

### Simpler BRTs

I also ran models with larger and even smaller datasets

-   Models without the regional indices preformed better (higher deviance explained)

-   As did models without lags

-   Now haddock ssb is the most important variable followed by the year (the partial dependence plot for this model shows pretty clearly that they are now in a low recruitment regime

    -   However, food variables are still among the top 6, and the direction of the partial dependence is the same: namely much higher Rs (log recruits/spawner) at low food abundances, which sharply declines at higher food

    -   The fact that this same pattern keeps appearing (paired with a short conversation about this topic with my former lab mates) suggests to me that this isn't spurious and that something is there. Perhaps more food causes more competition and predation, which could end up actually reducing the larval survival
